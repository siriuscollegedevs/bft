# Generated by Django 4.2.2 on 2023-07-06 11:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sirius_access.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Активен'), ('outdated', 'Неактивен')], max_length=10, verbose_name='статус')),
            ],
            options={
                'verbose_name': 'Аккаунт',
                'verbose_name_plural': 'Аккаунты',
                'db_table': 'accounts',
            },
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Активен'), ('outdated', 'Неактивен')], max_length=10, verbose_name='статус')),
            ],
            options={
                'verbose_name': 'Объект Фонда',
                'verbose_name_plural': 'Объекты Фонда',
                'db_table': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
                'db_table': 'records',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Активна'), ('outdated', 'Неактивна')], max_length=10, verbose_name='статус')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'db_table': 'requests',
            },
        ),
        migrations.CreateModel(
            name='RecordHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Действие совершено')),
                ('status', models.CharField(choices=[('deleted', 'Удалена'), ('canceled', 'Аннулирована'), ('outdated', 'Истек срок действия'), ('modified', 'Изменена'), ('created', 'Создана'), ('closed', 'Погашена')], max_length=20, verbose_name='статус')),
                ('car_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Автомобильный номер')),
                ('car_brand', models.CharField(blank=True, max_length=20, null=True, verbose_name='Марка')),
                ('car_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='Модель')),
                ('type', models.CharField(choices=[('for_once', 'разовый'), ('for_long_time', 'временный')], max_length=13, verbose_name='Тип заявки')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Фамилия')),
                ('surname', models.CharField(blank=True, max_length=20, null=True, verbose_name='Отчество')),
                ('from_date', models.DateTimeField(blank=True, null=True, verbose_name='с')),
                ('to_date', models.DateTimeField(verbose_name='по')),
                ('note', models.TextField(verbose_name='Примечание')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sirius_access.account', verbose_name='Изменен пользователем')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sirius_access.object', verbose_name='Объект')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sirius_access.record', verbose_name='Запись')),
            ],
            options={
                'db_table': 'records_history',
            },
        ),
        migrations.AddField(
            model_name='record',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sirius_access.request'),
        ),
        migrations.CreateModel(
            name='ObjectHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, validators=[sirius_access.models.is_positive], verbose_name='Версия')),
                ('name', models.CharField(max_length=40, verbose_name='Название')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Действие совершено')),
                ('action', models.CharField(choices=[('delited', 'Удален'), ('modified', 'Изменен'), ('created', 'Создан')], max_length=10, verbose_name='Совершенное действие')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sirius_access.account', verbose_name='Изменен пользователем')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sirius_access.object', verbose_name='Объект Фонда')),
            ],
            options={
                'db_table': 'objects_history',
            },
        ),
        migrations.CreateModel(
            name='AccountHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Действие совершено')),
                ('type', models.CharField(choices=[('administrator', 'Администратор'), ('manager', 'Руководитель СБ'), ('specialist', 'Специалист СБ'), ('security_officer', 'Сотрудник охраны')], max_length=16, verbose_name='Тип аккаунта')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Фамилия')),
                ('surname', models.CharField(blank=True, max_length=20, null=True, verbose_name='Отчество')),
                ('position', models.CharField(max_length=20, verbose_name='Должность')),
                ('action', models.CharField(choices=[('delited', 'Удален'), ('modified', 'Изменен'), ('created', 'Создан')], max_length=10, verbose_name='Совершенное действие')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modified', to='sirius_access.account', verbose_name='Аккаунт')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='modifier', to='sirius_access.account', verbose_name='Изменен пользователем')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_history',
            },
        ),
        migrations.CreateModel(
            name='AccountToObject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sirius_access.account')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sirius_access.object')),
            ],
            options={
                'db_table': 'account_to_object',
                'unique_together': {('object', 'account')},
            },
        ),
    ]
